function formatDate(date) {
  const day = String(date.getDate()).padStart(2, "0"); // –î–µ–Ω—å —Å –≤–µ–¥—É—â–∏–º –Ω—É–ª–µ–º
  const month = String(date.getMonth() + 1).padStart(2, "0"); // –ú–µ—Å—è—Ü —Å –≤–µ–¥—É—â–∏–º –Ω—É–ª–µ–º
  const year = date.getFullYear(); // –ì–æ–¥
  return `${day}-${month}-${year}`; // –§–æ—Ä–º–∞—Ç –î–î-–ú–ú-–ì–ì–ì–ì
}

function generateSchedule() {
  const startDateInput = document.getElementById("start-date").value;
  const intervalDaysInput = document.getElementById("interval-days").value; // –ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–Ω–µ–π
  const person1 = document.getElementById("person1").value;
  const person2 = document.getElementById("person2").value;

  const scheduleTable = document.querySelector("#schedule-table tbody");
  scheduleTable.innerHTML = ""; // –û—á–∏—Å—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü—ã

  const interval = parseInt(intervalDaysInput, 10); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤ —á–∏—Å–ª–æ
  let currentDate = new Date(startDateInput);
  const endDate = new Date(currentDate); // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –Ω–∞—á–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã
  endDate.setFullYear(currentDate.getFullYear() + 1); // –î–æ–±–∞–≤–ª—è–µ–º 12 –º–µ—Å—è—Ü–µ–≤

  let toggle = true; // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –¥–ª—è —á–µ—Ä–µ–¥–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤
  const scheduleData = []; // –î–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ Local Storage

  while (currentDate < endDate) {
    const row1 = document.createElement("tr");
    const dateCell = document.createElement("td");
    dateCell.textContent = formatDate(currentDate); // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
    dateCell.rowSpan = 2; // –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ –¥–ª—è –¥–∞—Ç—ã
    dateCell.className = "date-cell";
    dateCell.contentEditable = "true"; // –î–µ–ª–∞–µ–º –¥–∞—Ç—É —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–π
    row1.appendChild(dateCell);

    // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
    const person1Cell = document.createElement("td");
    person1Cell.textContent = toggle ? person1 : person2;
    person1Cell.className = "name-cell";
    row1.appendChild(person1Cell);

    const status1Cell = document.createElement("td");
    status1Cell.textContent = "ON";
    status1Cell.className = "status on";
    row1.appendChild(status1Cell);

    scheduleTable.appendChild(row1);

    // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–∏
    const row2 = document.createElement("tr");
    const person2Cell = document.createElement("td");
    person2Cell.textContent = toggle ? person2 : person1;
    person2Cell.className = "name-cell";
    row2.appendChild(person2Cell);

    const status2Cell = document.createElement("td");
    status2Cell.textContent = "OFF";
    status2Cell.className = "status off";
    row2.appendChild(status2Cell);

    scheduleTable.appendChild(row2);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –º–∞—Å—Å–∏–≤
    scheduleData.push({
      date: formatDate(currentDate),
      person1: toggle ? person1 : person2,
      status1: "ON",
      person2: toggle ? person2 : person1,
      status2: "OFF",
    });

    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –¥–∞—Ç—ã
    toggle = !toggle;

    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª
    currentDate.setDate(currentDate.getDate() + interval);
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Local Storage
  localStorage.setItem("scheduleData", JSON.stringify(scheduleData));
  localStorage.setItem("inputData", JSON.stringify({ startDateInput, intervalDaysInput, person1, person2 }));
}

function loadInputsAndSchedule() {
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è input
  const savedInputs = JSON.parse(localStorage.getItem("inputData"));
  if (savedInputs) {
    document.getElementById("start-date").value = savedInputs.startDateInput;
    document.getElementById("interval-days").value = savedInputs.intervalDaysInput;
    document.getElementById("person1").value = savedInputs.person1;
    document.getElementById("person2").value = savedInputs.person2;
  }

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
  const savedData = JSON.parse(localStorage.getItem("scheduleData"));
  if (savedData && Array.isArray(savedData)) {
    const scheduleTable = document.querySelector("#schedule-table tbody");
    scheduleTable.innerHTML = ""; // –û—á–∏—Å—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü—ã

    savedData.forEach((entry) => {
      const row1 = document.createElement("tr");
      const dateCell = document.createElement("td");
      dateCell.textContent = entry.date;
      dateCell.rowSpan = 2;
      dateCell.className = "date-cell";
      dateCell.contentEditable = "true";
      row1.appendChild(dateCell);

      const person1Cell = document.createElement("td");
      person1Cell.textContent = entry.person1;
      person1Cell.className = "name-cell";
      row1.appendChild(person1Cell);

      const status1Cell = document.createElement("td");
      status1Cell.textContent = entry.status1;
      status1Cell.className = entry.status1 === "ON" ? "status on" : "status off";
      row1.appendChild(status1Cell);

      scheduleTable.appendChild(row1);

      const row2 = document.createElement("tr");
      const person2Cell = document.createElement("td");
      person2Cell.textContent = entry.person2;
      person2Cell.className = "name-cell";
      row2.appendChild(person2Cell);

      const status2Cell = document.createElement("td");
      status2Cell.textContent = entry.status2;
      status2Cell.className = entry.status2 === "ON" ? "status on" : "status off";
      row2.appendChild(status2Cell);

      scheduleTable.appendChild(row2);
    });
  }
}
// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.onload = loadInputsAndSchedule;


function saveCurrentTable() {
  const scheduleTable = document.querySelector("#schedule-table tbody");
  const rows = scheduleTable.querySelectorAll("tr");
  const scheduleData = [];

  for (let i = 0; i < rows.length; i += 2) {
    const dateCell = rows[i].querySelector(".date-cell").textContent.trim();
    const person1 = rows[i].querySelector("td:nth-child(2)").textContent.trim();
    const status1 = rows[i].querySelector("td:nth-child(3)").textContent.trim();

    const person2 = rows[i + 1].querySelector("td:nth-child(1)").textContent.trim();
    const status2 = rows[i + 1].querySelector("td:nth-child(2)").textContent.trim();

    scheduleData.push({
      date: dateCell,
      person1: person1,
      status1: status1,
      person2: person2,
      status2: status2,
    });
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É –≤ Local Storage
  localStorage.setItem("scheduleData", JSON.stringify(scheduleData));

  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  showTemporaryMessage("Schedule SAVED üëå");
}

function showTemporaryMessage(message) {
  // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
  const messageContainer = document.createElement("div");
  messageContainer.textContent = message;
  messageContainer.style.position = "fixed";
  messageContainer.style.top = "20px";
  messageContainer.style.right = "20px";
  messageContainer.style.padding = "10px 20px";
  messageContainer.style.backgroundColor = "#4CAF50";
  messageContainer.style.color = "white";
  messageContainer.style.borderRadius = "5px";
  messageContainer.style.boxShadow = "0 4px 6px rgba(0, 0, 0, 0.1)";
  messageContainer.style.fontSize = "14px";
  messageContainer.style.zIndex = "1000";

  // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –¥–æ–∫—É–º–µ–Ω—Ç
  document.body.appendChild(messageContainer);

  // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
  setTimeout(() => {
    document.body.removeChild(messageContainer);
  }, 2000);
}



function downloadPDF() {
  const { jsPDF } = window.jspdf;
  const pdf = new jsPDF();
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ (RGB –∏–ª–∏ HEX)
  pdf.setFillColor(0, 238, 255); // –°–≤–µ—Ç–ª–æ-—Å–µ—Ä—ã–π —Ñ–æ–Ω
  pdf.rect(0, 0, pdf.internal.pageSize.getWidth(), pdf.internal.pageSize.getHeight(), 'F'); // –ó–∞–ª–∏–≤–∫–∞ –≤—Å–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  pdf.text("Work Schedule", 20, 10);

  pdf.autoTable({
    html: "#schedule-table", // –ë–µ—Ä–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ HTML —Ç–∞–±–ª–∏—Ü—ã
    startY: 20,
    styles: {
      lineColor: [17, 0, 246], // –¶–≤–µ—Ç —Ä–∞–º–∫–∏ (#1700F6)
      lineWidth: 0.5,
      fillColor: [240, 240, 240], // –û–±—â–∏–π —Ü–≤–µ—Ç —Ñ–æ–Ω–∞
      textColor: [0, 0, 0], // –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
      fontSize: 10, // –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
      cellPadding: 2, // –û—Ç—Å—Ç—É–ø –≤–Ω—É—Ç—Ä–∏ —è—á–µ–µ–∫
      fontStyle: 'bolditalic',
      halign: 'center', // –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ –∫–æ–ª–æ–Ω–∫–µ
      valign: 'middle', // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ —Ü–µ–Ω—Ç—Ä—É
    },
    headStyles: {
      fillColor: [255, 96, 0], // –û—Ä–∞–Ω–∂–µ–≤—ã–π —Ñ–æ–Ω –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ (#FF6000)
      textColor: [255, 255, 255], // –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç
      fontSize: 12, // –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö
    },
    alternateRowStyles: {
      fillColor: [220, 230, 241], // –°–≤–µ—Ç–ª–æ-–≥–æ–ª—É–±–æ–π —Ü–≤–µ—Ç —á–µ—Ä–µ–¥—É—é—â–∏—Ö—Å—è —Å—Ç—Ä–æ–∫
    },
    columnStyles: {
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –∫–æ–ª–æ–Ω–∫–∏ —Å —Ç–µ–∫—Å—Ç–æ–º "status"
      0: { // –ò–Ω–¥–µ–∫—Å –∫–æ–ª–æ–Ω–∫–∏ (–Ω—É–º–µ—Ä–∞—Ü–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0)
        fillColor: [255, 250, 192],
      },
      1: { // –ò–Ω–¥–µ–∫—Å –∫–æ–ª–æ–Ω–∫–∏ (–Ω—É–º–µ—Ä–∞—Ü–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0)
        halign: 'center', // –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ
        valign: 'middle', // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ
        fillColor: [206, 216, 105],
      },
    },
  });

  pdf.save("schedule.pdf");
}

function printTable() {
  // –ü–æ–ª—É—á–∞–µ–º HTML-–∫–æ–¥ —Ç–∞–±–ª–∏—Ü—ã
  const tableHTML = document.getElementById("schedule-table").outerHTML;

  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø–µ—á–∞—Ç–∏
  const printWindow = window.open("", "_blank");

  // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–æ–≤–æ–≥–æ –æ–∫–Ω–∞
  printWindow.document.open();
  printWindow.document.write(`
    <!DOCTYPE html>
    <html>
    <head>
      <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800;900&display=swap');
        * {
          margin: 0;
          padding: 0;
          box-sizing: border-box;
          font-family: "Poppins", sans-serif;
        }
        body {
          font-family: Arial, sans-serif;
          margin: 20px;
          background-color: #00eeff;
          color-adjust: exact; /* –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ Safari */
          -webkit-print-color-adjust: exact; /* –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ Webkit */
          print-color-adjust: exact; /* –û–±—â–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ */
        }
        h1 {
          text-align: center;
          font-size: 2rem; /* –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞ */
          color: #333333;
          margin-bottom: 20px;
        }
        table {
          width: 100%;
          border-spacing: 0;
          margin: 0 auto;
          box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        th,
        td {
          font-size: 16px;
          padding: 5px;
          text-align: center;
          border: 1px solid #000000;
        }
        th {
          background-color: #ff6000;
          color: #ffffff;
        }
        td {
          background-color: #ced869;
        }
        .date-cell {
          text-align: center;
          vertical-align: middle;
          font-weight: bold;
          background-color: #fffac0;
        }
        .name-cell {
          font-weight: 600;
        }
        .status.on {
          background-color: #F44336;
          color: white;
          font-weight: bold;
        }
        .status.off {
          background-color: #4CAF50;
          color: white;
          font-weight: bold;
        }
      </style>
    </head>
    <body>
      <h1>Work Schedule</h1> <!-- –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ -->
      ${tableHTML} <!-- –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É -->
    </body>
    </html>
  `);

  printWindow.document.close();

  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—á–∞—Ç—å
  printWindow.print();
}





// window.onload = generateSchedule;